# sing-box version 1.8.10,  go1.22.1 windows/amd64

inbounds:
  - tag: mixed-in
    listen: '127.0.0.1'
    set_system_proxy: false # 自动设置系统代理
    listen_port: 51201
    sniff: true
    tcp_fast_open: true
    domain_strategy: prefer_ipv6
    type: mixed
  - tag: tun-in # sudo needed # 工作不正常，后面再修
    interface_name: inkotun
    type: tun
    auto_route: true
    strict_route: true
    stack: system
    sniff: true
    mtu: 9000
    inet4_address: 172.19.0.1/30
    inet6_address: fdfe:dcba:8964::1/126
    domain_strategy: prefer_ipv6
    exclude_package:
    - com.android.captiveportallogin
log: {level: info, timestamp: true, disabled: false} # output: "box.log"

experimental:
  clash_api: 
    external_controller: 127.0.0.1:9090
    default_mode: Rule
    external_ui_download_url: "https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip"
    external_ui_download_detour: "PROXY"
  cache_file:
    enabled: true
    store_fakeip: true
    cache_id: inko # If set, conf specified data will use a separate store keyed by it

ntp: # provides time for protocols like TLS/ss/VMess
  enabled: false # UDP一不稳就崩啊，离谱
  server: time.apple.com
  server_port: 123
  interval: 30m
  detour: NOPROXY  # UDP support needed

# proxies: &proxies # 哎sing-box json不允许多写
#   - tag: proxy_example
#     type: vless
#     uuid: xx

outbounds: # 策略和策略组
  # - <<: *proxies
  - tag: proxy_example
    server: example.sing-box-conf.io
    server_port: 443
    tls: {enabled: true, utls: {enabled: true, fingerprint: chrome}}
    transport:
      early_data_header_name: Sec-WebSocket-Protocol
      max_early_data: 2064
      path: //////
      type: ws
    type: vless
    domain_strategy: prefer_ipv4
    tcp_fast_open: true
    uuid: ____

  - {tag: REJECT, type: block} # 策略：拒绝
  - {tag: NOPROXY, type: direct} # 策略：直连, NOPROXY = DIRECT, CENSORED = CN
  - {tag: DNSOUT, type: dns}
  # Proxy-Groups
  # 常规出口选择
  - tag: PROXY  # 代理出口
    type: selector
    interrupt_exist_connections: false
    outbounds:
      - AUTO
      - MANUAL
      - proxy_example
      - NOPROXY
    default: AUTO
  - tag: CENSORED  # 国内出口
    type: selector
    interrupt_exist_connections: false
    outbounds:
      - NOPROXY
      - PROXY
    default: NOPROXY
  - tag: ADBlocks  # 广告、隐私保护出口
    type: selector
    interrupt_exist_connections: false
    outbounds:
      - REJECT
      - NOPROXY
      - CENSORED
      - PROXY
    default: REJECT
  - tag: MANUAL  # 出口手动选择
    type: selector
    interrupt_exist_connections: false
    outbounds: &all_proxies
      - proxy_example
    default: proxy_example
  - tag: AUTO  # 出口自动选择
    type: urltest
    interrupt_exist_connections: false
    outbounds: 
      - proxy_example
      # <<: *all_proxies # 哎yaml居然不能这样
    url: http://aka.ms # 204其实更好，但这个短诶
    interval: 3m
    tolerance: 100 # milliseconds, 50 by default
    idle_timeout: 30m # 30min by default
  # 路由出口选择
  - {tag: Apple-Route, default: PROXY, type: selector, interrupt_exist_connections: false, outbounds: [PROXY, NOPROXY]}
  - {tag: iCloud-Route, default: PROXY, type: selector, interrupt_exist_connections: false, outbounds: [PROXY, NOPROXY]}
  - {tag: Microsoft-Route, default: PROXY, type: selector, interrupt_exist_connections: false, outbounds: [PROXY, NOPROXY]}
  - {tag: OpenAI-Route, default: PROXY, type: selector, interrupt_exist_connections: false, outbounds: [PROXY, NOPROXY]}
  - {tag: Telegram-Route, default: PROXY, type: selector, interrupt_exist_connections: false, outbounds: [PROXY, NOPROXY]}
  - {tag: Google-Route, default: PROXY, type: selector, interrupt_exist_connections: false, outbounds: [PROXY, NOPROXY]}
  - {tag: Youtube-Route, default: PROXY, type: selector, interrupt_exist_connections: false, outbounds: [PROXY, NOPROXY]}
  - {tag: Netflix-Route, default: PROXY, type: selector, interrupt_exist_connections: false, outbounds: [PROXY, NOPROXY]}
  - {tag: GamerTW-Route, default: PROXY, type: selector, interrupt_exist_connections: false, outbounds: [PROXY, NOPROXY]}

dns:
  disable_cache: false
  disable_expire: true
  servers: # DNS Providers, 个人偏好必须加密
    # - { tag: dns_alidns, address: tls://223.5.5.5, detour: NOPROXY }
    - { tag: dns_tencent, address: tls://120.53.53.53, detour: NOPROXY, address_strategy: prefer_ipv4}
    - { tag: dns_tencent2, address: tls://1.12.12.12, detour: NOPROXY, address_strategy: prefer_ipv4}
    - { tag: dns_block, address: rcode://refused }
    # - { tag: dns_fakeip, address: fakeip }
    # - { tag: dns_google, address: tls://dns.google, detour: PROXY, address_resolver: dns_alidns }
    - { tag: dns_open, address: "https://example.sing-box-conf.io/_forward/https://dns.google/dns-query", detour: NOPROXY, address_resolver: dns_tencent }
    # - { tag: dns_backup, address: local, detour: NOPROXY }

  rules:
    # - { clash_mode: Direct, server: dns_alidns }
    # - { clash_mode: Global, server: dns_fakeip, rewrite_ttl: 1}
    - { outbound: ADBlocks, server: dns_block} # 逻辑怪怪的，应该先查询dns才对。tun模式可能出问题。后面改吧
    # - { rule_set: cn, server: dns_tencent2}
    - { outbound: CENSORED, server: dns_tencent2}
    # - { outbound: PROXY, server: dns_open}
  final: dns_open
  # strategy: prefer_ipv4
  fakeip: { enabled: true, inet4_range: 198.18.0.0/15, inet6_range: fc00::/18 }

route:
  auto_detect_interface: true
  override_android_vpn: true
  rule_set: # Rule Providers
   - { tag: ads,          url: https://cdn.jsdelivr.net/gh/DustinWin/ruleset_geodata@sing-box-ruleset/ads.srs, download_detour: NOPROXY, format: binary, type: remote}
   - { tag: applications, url: https://cdn.jsdelivr.net/gh/DustinWin/ruleset_geodata@sing-box-ruleset/applications.srs, download_detour: NOPROXY, format: binary, type: remote}
   - { tag: private,      url: https://cdn.jsdelivr.net/gh/DustinWin/ruleset_geodata@sing-box-ruleset/private.srs, download_detour: NOPROXY, format: binary, type: remote}
   - { tag: microsoft-cn, url: https://cdn.jsdelivr.net/gh/DustinWin/ruleset_geodata@sing-box-ruleset/microsoft-cn.srs, download_detour: NOPROXY, format: binary, type: remote}
   - { tag: apple-cn,     url: https://cdn.jsdelivr.net/gh/DustinWin/ruleset_geodata@sing-box-ruleset/apple-cn.srs, download_detour: NOPROXY, format: binary, type: remote}
  #  - { tag: google-cn,    url: https://cdn.jsdelivr.net/gh/DustinWin/ruleset_geodata@sing-box-ruleset/google-cn.srs, download_detour: NOPROXY, format: binary, type: remote}
   - { tag: games-cn,     url: https://cdn.jsdelivr.net/gh/DustinWin/ruleset_geodata@sing-box-ruleset/games-cn.srs, download_detour: NOPROXY, format: binary, type: remote}
   - { tag: networktest,  url: https://cdn.jsdelivr.net/gh/DustinWin/ruleset_geodata@sing-box-ruleset/networktest.srs, download_detour: NOPROXY, format: binary, type: remote}
   - { tag: proxy,        url: https://cdn.jsdelivr.net/gh/DustinWin/ruleset_geodata@sing-box-ruleset/proxy.srs, download_detour: NOPROXY, format: binary, type: remote}
   - { tag: cn,           url: https://cdn.jsdelivr.net/gh/DustinWin/ruleset_geodata@sing-box-ruleset/cn.srs, download_detour: NOPROXY, format: binary, type: remote}
   - { tag: telegramip,   url: https://cdn.jsdelivr.net/gh/DustinWin/ruleset_geodata@sing-box-ruleset/telegramip.srs, download_detour: NOPROXY, format: binary, type: remote}
   - { tag: privateip,    url: https://cdn.jsdelivr.net/gh/DustinWin/ruleset_geodata@sing-box-ruleset/privateip.srs, download_detour: NOPROXY, format: binary, type: remote}
   - { tag: cnip,         url: https://cdn.jsdelivr.net/gh/DustinWin/ruleset_geodata@sing-box-ruleset/cnip.srs, download_detour: NOPROXY, format: binary, type: remote}
  geosite: {download_url: https://cdn.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geosite.db, download_detour: NOPROXY}
  geoip:   {download_url: https://cdn.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geoip.db, download_detour: NOPROXY}
  final: PROXY # MATCH
  rules:
    # The default rule uses the following matching logic:
    # 地址& (domain|domain_suffix|domain_keyword|domain_regex|geosite|geoip|ip_cidr|ip_is_private)&
    # 端口& (port|port_range)&
    # 来源& (source_geoip|source_ip_cidr|source_ip_is_private)&(source_port|source_port_range)&
    # 其他  other fields
    - { protocol: [ dns ], outbound: DNSOUT }
    - { clash_mode: Direct, outbound: NOPROXY } # Clash API兼容
    - { clash_mode: Global, outbound: PROXY } # Clash API兼容
    - outbound: ADBlocks # 来自MIUI13的一些史。更新版本我没试过
      type: logical
      mode: or
      invert: false
      rules: 
        - process_name: 
          - com.xiaomi.xmsf
          - com.miui.securityadd
          - com.miui.securitycore
          - com.miui.securitycenter
          - com.lbe.security.miui
          - com.miui.guardprovider
          - com.android.quicksearchbox
          - com.miui.packageinstaller
          - com.xiaomi.mircs
          - com.xiaomi.joyose
          - com.miui.phrase
          - com.miui.vpnsdkmanager
          - com.miui.cloudservice
          - com.miui.core
          - com.miui.daemon
          - com.xiaomi.mirror
          - com.qualcomm.qti.cne
          - com.qualcomm.wfd.service
          - com.sohu.inputmethod.sogou.xiaomi
        - domain_suffix:
          - installer.miui.com
          - tracking.miui.com
          - a0.app.xiaomi.com
          - etl-xlmc-ssl.sandai.net
          - cn.app.chat.xiaomi.net
          - idm.api.io.mi.com
          - api.jr.mi.com
          - ssl-cdn.static.browser.mi-img.com
          - sec.miui.com
          - data.mistat.xiaomi.com
          - diagnosis.ad.xiaomi.com
          - log.ad.xiaomi.com
          - m.track.ad.xiaomi.com
          - sdkconfig.ad.xiaomi.com
          - qsb.browser.miui.srv
          - rom.pt.miui.srv
          - ccc.sys.miui.com
          - jupiter.sys.miui.com
          - metok.sys.miui.com
          - fclick.baidu.com
          - beacon.qq.com
          - browser.events.data.msn.com
        - domain_keyword:
          - avlyun # avlyun.com 小米用的杀软，绝对没用。。。
          - tmfsdk # tmfsdk.m.qq.com
    - outbound: CENSORED # 安卓，部分国产软件
      process_name: 
        - cn.gov.tax.its # 个人所得税
        - cn.hsa.app # 医保
        - com.tmri.app.main # 交管12123
        - com.MobileTicket # 铁路12306
        - com.icbc # 工商银行
        - com.unionpay # 云闪付
        - com.eg.android.AlipayGphone # 支付宝
        - com.taobao.taobao # 淘宝
        - com.taobao.idlefish # 闲鱼
        - com.sankuai.meituan # 美团
        - ctrip.android.view # 携程
        - com.jingdong.app.mall # 京东
        - com.xunmeng.pinduoduo # 拼多多
        - com.dianping.v1 # 大众点评
        - com.greenpoint.android.mc10086.activity # 10086离谱
        - com.sinovatech.unicom.ui # 联通
        - com.qq.ac.android # 腾讯漫画
        - com.tencent.weread # 微信读书
        - com.chaoxing.mobile # 学习通
        - com.crirp.zhipu # 智谱（业余无线电）
        - com.autonavi.minimap # 高德地图
        - com.eusoft.eudic # 欧路词典
        - com.eusoft.frhelper # 欧路法语词典
        - com.baidu.newapp # 文心一言
        - com.baidu.tieba # 百度贴吧
        - com.dragon.read # 番茄小说
        - com.tencent.qqmusic # QQ音乐
        - com.kugou.android.lite # 酷狗概念版
        - com.ss.android.ugc.aweme # 抖音
        - com.tencent.mm # 微信
    - { geosite: [ category-ads-all ], outbound: ADBlocks } # 广告拦截
    # - { rule_set: [ ads ], outbound: ADBlocks } #// 自定义规则优先放前面
    # - { rule_set: [ applications ], outbound: CENSORED } # 直连软件, 基于ProcessName
    - { port_range: [ "6881:6889" ], outbound: CENSORED } # BT流量直连
    # - { rule_set: [ private ], outbound: NOPROXY } # 私有网络
    - { rule_set: [ microsoft-cn ], outbound: Microsoft-Route } # 国内可用的微软服务
    - { rule_set: [ apple-cn ], outbound: Apple-Route } # 国内可用的苹果服务
    # - { rule_set: [ google-cn ], outbound: Google-Route } # 谷歌服务
    # - { rule_set: [ games-cn ], outbound: MANUAL } # 游戏平台
    # - { rule_set: [ networktest ], outbound: PROXY } # 网络测试
    - { rule_set: [ proxy ], outbound: PROXY } # 代理域名
    - { rule_set: [ cn ], outbound: CENSORED } # 直连
    # - { rule_set: [ telegramip ], outbound: PROXY } # Telegram
    - { rule_set: [ privateip ],  outbound: NOPROXY } # 私有网络
    - { rule_set: [ cnip ], outbound: CENSORED } # 国内 IP
